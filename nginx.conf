# Nginx configuration for Telegram Clicker Game
# This configuration handles proxy headers, request ID generation, and CSP

upstream api_backend {
    server api:3000;
}

upstream bot_backend {
    server bot:3001;
}

# upstream webapp_backend {
#     server webapp:3003;
# }

# Map for request ID generation
map $http_x_request_id $req_id_set {
    default $http_x_request_id;
    ''      $request_id;
}

server {
    listen 80;
    server_name _;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # API routes
    location /api/ {
        proxy_pass http://api_backend/;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://web.telegram.org" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Telegram-Init-Data, X-Request-ID" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://web.telegram.org";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Telegram-Init-Data, X-Request-ID";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
    }

    # WebApp routes with CSP for Mini App (commented out - webapp not available)
    # location /webapp/ {
    #     proxy_pass http://webapp_backend/;
    #     
    #     # Proxy headers
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Request-ID $req_id_set;
    #     
    #     # WebApp specific headers
    #     proxy_set_header X-Forwarded-Host $host;
    #     proxy_set_header X-Forwarded-Server $host;
    #     
    #     # CSP for Mini App - minimal but secure
    #     add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://telegram.org https://*.telegram.org; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://api.telegram.org; frame-ancestors 'self' https://web.telegram.org;" always;
    #     
    #     # Timeouts
    #     proxy_connect_timeout 30s;
    #     proxy_send_timeout 30s;
    #     proxy_read_timeout 30s;
    #     
    #     # Buffer settings
    #     proxy_buffering on;
    #     proxy_buffer_size 4k;
    #     proxy_buffers 8 4k;
    # }

    # Health check endpoints
    location /health {
        proxy_pass http://api_backend/health;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # No caching for health checks
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Kubernetes-style health probes
    location /health/live {
        proxy_pass http://api_backend/health/live;
        proxy_set_header X-Request-ID $req_id_set;
    }

    location /health/ready {
        proxy_pass http://api_backend/health/ready;
        proxy_set_header X-Request-ID $req_id_set;
    }

    location /health/startup {
        proxy_pass http://api_backend/health/startup;
        proxy_set_header X-Request-ID $req_id_set;
    }

    # Metrics endpoint (restricted)
    location /metrics {
        # Allow only from monitoring systems
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://api_backend/metrics;
        proxy_set_header X-Request-ID $req_id_set;
    }

    # Bot webhook endpoint
    location /webhook {
        proxy_pass http://bot_backend/webhook;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # Telegram webhook specific settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Large body support for webhook data
        client_max_body_size 1M;
    }

    # Bot info endpoint
    location /bot/info {
        proxy_pass http://bot_backend/info;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
    }

    # Bot health checks
    location /bot/health {
        proxy_pass http://bot_backend/health;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # No caching for health checks
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Rate limiting (moved to http block in main nginx.conf)
    # limit_req zone=api burst=20 nodelay;
    # limit_req zone=webapp burst=10 nodelay;

    # Logging
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
}
