# Nginx configuration for Telegram Clicker Game
# This configuration handles proxy headers, request ID generation, and CSP

upstream api_backend {
    server api:3000;
}

upstream bot_backend {
    server bot:3001;
}

upstream worker_backend {
    server worker:3002;
}

upstream webapp_backend {
    server webapp:3003;
}

# Map for request ID generation
map $http_x_request_id $req_id_set {
    default $http_x_request_id;
    ''      $request_id;
}

server {
    listen 80;
    server_name _;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # API routes
    location /api/ {
        proxy_pass http://api_backend/;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://web.telegram.org" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Telegram-Init-Data, X-Request-ID" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://web.telegram.org";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Telegram-Init-Data, X-Request-ID";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
    }

    # Handle vite.svg (fallback to emoji icon)
    location = /vite.svg {
        add_header Content-Type image/svg+xml;
        add_header Cache-Control "public, max-age=31536000" always;
        return 200 '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text y=".9em" font-size="90">ðŸŽ®</text></svg>';
    }

    # WebApp static assets
    location /assets/ {
        proxy_pass http://webapp_backend/assets/;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # Cache static assets
        add_header Cache-Control "public, max-age=31536000" always;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # WebApp routes - proxy to webapp backend
    location /webapp/ {
        proxy_pass http://webapp_backend/;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # CSP for Telegram Mini App
        add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' https://telegram.org https://web.telegram.org; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://telegram.org; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https:; frame-src 'self' https://web.telegram.org;" always;
    }

    # Simple HTML test
    location /simple {
        add_header Content-Type text/html;
        return 200 '<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Komic Clicker Test - Simple Version</title>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background: #f0f0f0;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .container {
            text-align: center;
            background: white;
            padding: 40px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            margin-bottom: 20px;
        }
        button {
            padding: 15px 30px;
            font-size: 18px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin: 10px;
        }
        button:hover {
            background: #0056b3;
        }
        .info {
            margin: 20px 0;
            padding: 15px;
            background: #e9ecef;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>ðŸŽ® Komic Clicker Test</h1>
        <p>Simple HTML version - No React!</p>
        
        <div class="info">
            <p><strong>Status:</strong> <span id="status">Loading...</span></p>
            <p><strong>Time:</strong> <span id="time"></span></p>
            <p><strong>Telegram WebApp:</strong> <span id="telegram-status">Checking...</span></p>
        </div>
        
        <button onclick="testClick()">Test Click</button>
        <button onclick="showAlert()">Show Alert</button>
        <button onclick="updateTime()">Update Time</button>
    </div>

    <script>
        function updateTime() {
            document.getElementById("time").textContent = new Date().toLocaleTimeString();
        }
        
        function testClick() {
            alert("Button clicked! WebApp is working!");
        }
        
        function showAlert() {
            alert("This is a test alert from the WebApp!");
        }
        
        function checkTelegram() {
            if (window.Telegram && window.Telegram.WebApp) {
                document.getElementById("telegram-status").textContent = "Available";
                document.getElementById("status").textContent = "Ready";
                
                window.Telegram.WebApp.ready();
                window.Telegram.WebApp.expand();
            } else {
                document.getElementById("telegram-status").textContent = "Not Available";
                document.getElementById("status").textContent = "Ready (Development Mode)";
            }
        }
        
        document.addEventListener("DOMContentLoaded", function() {
            updateTime();
            checkTelegram();
            setInterval(updateTime, 1000);
        });
    </script>
</body>
</html>';
    }

    # Health check endpoints
    location /health {
        proxy_pass http://api_backend/health;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # No caching for health checks
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Kubernetes-style health probes
    location /health/live {
        proxy_pass http://api_backend/health/live;
        proxy_set_header X-Request-ID $req_id_set;
    }

    location /health/ready {
        proxy_pass http://api_backend/health/ready;
        proxy_set_header X-Request-ID $req_id_set;
    }

    location /health/startup {
        proxy_pass http://api_backend/health/startup;
        proxy_set_header X-Request-ID $req_id_set;
    }

    # Metrics endpoint (restricted)
    location /metrics {
        # Allow only from monitoring systems
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://api_backend/metrics;
        proxy_set_header X-Request-ID $req_id_set;
    }

    # Bot webhook endpoint
    location /webhook {
        proxy_pass http://bot_backend/webhook;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # Telegram webhook specific settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Large body support for webhook data
        client_max_body_size 1M;
    }

    # Bot info endpoint
    location /bot/info {
        proxy_pass http://bot_backend/info;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
    }

    # Bot health checks
    location /bot/health {
        proxy_pass http://bot_backend/health;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # No caching for health checks
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Worker health checks
    location /worker/health {
        proxy_pass http://worker_backend/health;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # No caching for health checks
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Worker live health check
    location /worker/health/live {
        proxy_pass http://worker_backend/health/live;
        proxy_set_header X-Request-ID $req_id_set;
    }

    # Worker ready health check
    location /worker/health/ready {
        proxy_pass http://worker_backend/health/ready;
        proxy_set_header X-Request-ID $req_id_set;
    }

    # Worker startup health check
    location /worker/health/startup {
        proxy_pass http://worker_backend/health/startup;
        proxy_set_header X-Request-ID $req_id_set;
    }

    # Rate limiting (moved to http block in main nginx.conf)
    # limit_req zone=api burst=20 nodelay;
    # limit_req zone=webapp burst=10 nodelay;

    # Root path - serve WebApp (must be last)
    location / {
        proxy_pass http://webapp_backend/;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $req_id_set;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # CSP for Telegram Mini App
        add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' https://telegram.org https://web.telegram.org; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://telegram.org; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https:; frame-src 'self' https://web.telegram.org;" always;
    }

    # Logging
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
}
